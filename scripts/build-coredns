#!/bin/bash
set -e

source $(dirname $0)/../scripts/lib/version
source $(dirname $0)/../scripts/lib/debug_functions

function cleanup {
    trap_commands
    rm -rf ${TOPDIR}/coredns
}

trap cleanup EXIT

COREDNS_VERSION=$1
EXTRA_FLAGS="${@:2}"

TOPDIR=$(git rev-parse --show-toplevel)
COREDNS_GIT="https://github.com/coredns/coredns.git"
BUILD_DIR="build/linux/amd64"

cd ${TOPDIR}
git clone --depth 1 -b v${COREDNS_VERSION} ${COREDNS_GIT}
cd ${TOPDIR}/coredns
sed -i '/^kubernetes:kubernetes/a lighthouse:github.com/submariner-io/lighthouse/plugin/lighthouse' plugin.cfg
sed -i '$a replace\ k8s.io\/apimachinery\ =>\ k8s.io\/apimachinery\ v0.0.0-20190313205120-d7deff9243b1' go.mod
sed -i '$a replace\ github.com\/openzipkin-contrib\/zipkin-go-opentracing\ =>\ github.com\/openzipkin-contrib\/zipkin-go-opentracing\ v0.3.5' go.mod
sed -i '$a replace\ github.com/submariner-io/lighthouse\ =>\ '"${TOPDIR}" go.mod

function buildit() {
    go mod vendor
    make BINARY=${BUILD_DIR}/coredns SYSTEM=GOOS=linux GOARCH=amd64
}

# TODO: For some reason fails the first time, fix it?
buildit || buildit

cp Dockerfile ${BUILD_DIR}
cd ${BUILD_DIR}
${SCRIPTS_DIR}/build_image.sh -i lighthouse-coredns -f Dockerfile ${EXTRA_FLAGS}
