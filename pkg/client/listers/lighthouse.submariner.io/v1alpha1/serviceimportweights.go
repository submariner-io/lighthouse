/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/submariner-io/lighthouse/pkg/apis/lighthouse.submariner.io/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ServiceImportWeightsLister helps list ServiceImportWeightses.
type ServiceImportWeightsLister interface {
	// List lists all ServiceImportWeightses in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.ServiceImportWeights, err error)
	// ServiceImportWeightses returns an object that can list and get ServiceImportWeightses.
	ServiceImportWeightses(namespace string) ServiceImportWeightsNamespaceLister
	ServiceImportWeightsListerExpansion
}

// serviceImportWeightsLister implements the ServiceImportWeightsLister interface.
type serviceImportWeightsLister struct {
	indexer cache.Indexer
}

// NewServiceImportWeightsLister returns a new ServiceImportWeightsLister.
func NewServiceImportWeightsLister(indexer cache.Indexer) ServiceImportWeightsLister {
	return &serviceImportWeightsLister{indexer: indexer}
}

// List lists all ServiceImportWeightses in the indexer.
func (s *serviceImportWeightsLister) List(selector labels.Selector) (ret []*v1alpha1.ServiceImportWeights, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ServiceImportWeights))
	})
	return ret, err
}

// ServiceImportWeightses returns an object that can list and get ServiceImportWeightses.
func (s *serviceImportWeightsLister) ServiceImportWeightses(namespace string) ServiceImportWeightsNamespaceLister {
	return serviceImportWeightsNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ServiceImportWeightsNamespaceLister helps list and get ServiceImportWeightses.
type ServiceImportWeightsNamespaceLister interface {
	// List lists all ServiceImportWeightses in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.ServiceImportWeights, err error)
	// Get retrieves the ServiceImportWeights from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.ServiceImportWeights, error)
	ServiceImportWeightsNamespaceListerExpansion
}

// serviceImportWeightsNamespaceLister implements the ServiceImportWeightsNamespaceLister
// interface.
type serviceImportWeightsNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ServiceImportWeightses in the indexer for a given namespace.
func (s serviceImportWeightsNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ServiceImportWeights, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ServiceImportWeights))
	})
	return ret, err
}

// Get retrieves the ServiceImportWeights from the indexer for a given namespace and name.
func (s serviceImportWeightsNamespaceLister) Get(name string) (*v1alpha1.ServiceImportWeights, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("serviceimportweights"), name)
	}
	return obj.(*v1alpha1.ServiceImportWeights), nil
}
