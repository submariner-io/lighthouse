/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/submariner-io/lighthouse/pkg/apis/lighthouse.submariner.io/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ServiceImportWeightMapLister helps list ServiceImportWeightMaps.
// All objects returned here must be treated as read-only.
type ServiceImportWeightMapLister interface {
	// List lists all ServiceImportWeightMaps in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ServiceImportWeightMap, err error)
	// ServiceImportWeightMaps returns an object that can list and get ServiceImportWeightMaps.
	ServiceImportWeightMaps(namespace string) ServiceImportWeightMapNamespaceLister
	ServiceImportWeightMapListerExpansion
}

// serviceImportWeightMapLister implements the ServiceImportWeightMapLister interface.
type serviceImportWeightMapLister struct {
	indexer cache.Indexer
}

// NewServiceImportWeightMapLister returns a new ServiceImportWeightMapLister.
func NewServiceImportWeightMapLister(indexer cache.Indexer) ServiceImportWeightMapLister {
	return &serviceImportWeightMapLister{indexer: indexer}
}

// List lists all ServiceImportWeightMaps in the indexer.
func (s *serviceImportWeightMapLister) List(selector labels.Selector) (ret []*v1alpha1.ServiceImportWeightMap, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ServiceImportWeightMap))
	})
	return ret, err
}

// ServiceImportWeightMaps returns an object that can list and get ServiceImportWeightMaps.
func (s *serviceImportWeightMapLister) ServiceImportWeightMaps(namespace string) ServiceImportWeightMapNamespaceLister {
	return serviceImportWeightMapNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ServiceImportWeightMapNamespaceLister helps list and get ServiceImportWeightMaps.
// All objects returned here must be treated as read-only.
type ServiceImportWeightMapNamespaceLister interface {
	// List lists all ServiceImportWeightMaps in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ServiceImportWeightMap, err error)
	// Get retrieves the ServiceImportWeightMap from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.ServiceImportWeightMap, error)
	ServiceImportWeightMapNamespaceListerExpansion
}

// serviceImportWeightMapNamespaceLister implements the ServiceImportWeightMapNamespaceLister
// interface.
type serviceImportWeightMapNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ServiceImportWeightMaps in the indexer for a given namespace.
func (s serviceImportWeightMapNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ServiceImportWeightMap, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ServiceImportWeightMap))
	})
	return ret, err
}

// Get retrieves the ServiceImportWeightMap from the indexer for a given namespace and name.
func (s serviceImportWeightMapNamespaceLister) Get(name string) (*v1alpha1.ServiceImportWeightMap, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("serviceimportweightmap"), name)
	}
	return obj.(*v1alpha1.ServiceImportWeightMap), nil
}
